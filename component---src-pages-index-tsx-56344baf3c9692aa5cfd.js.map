{"version":3,"sources":["webpack:///./src/components/BlogList/BlogListItem.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/ProjectList/ProjectList.tsx","webpack:///./src/components/ProjectList/ProjectListItem.tsx","webpack:///./node_modules/react-feather/dist/icons/arrow-right-circle.js","webpack:///./src/components/BlogList/BlogList.tsx"],"names":["BlogListItem","frontmatter","thumbnail","slug","title","description","date","category","postLink","isMobile","useIsMobile","horizontal","key","vertical","to","size","IndexPage","data","uri","blogListContent","latestPost","nodes","map","props","id","projectListContent","latestProject","pageData","p","ProjectList","children","pt","allChildren","ProjectListItem","keywords","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRightCircle","_ref","ref","_ref$color","color","_ref$size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","x1","y1","x2","y2","displayName","BlogList"],"mappings":"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","file":"component---src-pages-index-tsx-56344baf3c9692aa5cfd.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Box from '../Box/Box'\nimport { ArrowRightCircle as ArrowIcon } from 'react-feather'\nimport Thumbnail from '../Thumbnail/Thumbnail'\nimport BlogMeta from '../BlogPost/BlogMeta'\nimport useIsMobile from '../useIsMobile'\nimport { PostData } from '../../typings'\n\ninterface BlogListItemProps extends PostData {}\n\nconst BlogListItem = ({ frontmatter }: BlogListItemProps) => {\n  const { thumbnail, slug, title, description, date, category } = frontmatter\n  const postLink = `/blog${slug}`\n\n  const isMobile = useIsMobile()\n\n  return (\n    <Box horizontal key={slug}>\n      {!isMobile && <Thumbnail postLink={postLink} thumbnail={thumbnail} />}\n      <Box vertical>\n        <h2>\n          <Link to={postLink}>{title}</Link>\n        </h2>\n        <BlogMeta date={date} category={category} />\n        {isMobile && <Thumbnail postLink={postLink} thumbnail={thumbnail} />}\n        <p>{description}</p>\n        <Link to={postLink}>\n          Read post <ArrowIcon size={18} />\n        </Link>\n      </Box>\n    </Box>\n  )\n}\n\nexport default BlogListItem\n","import React from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\nimport { ArrowRightCircle } from 'react-feather'\n\nimport { AllPosts, AllProjects } from '../typings'\nimport BlogList from '../components/BlogList/BlogList'\nimport BlogListItem from '../components/BlogList/BlogListItem'\nimport ProjectList from '../components/ProjectList/ProjectList'\nimport ProjectListItem from '../components/ProjectList/ProjectListItem'\nimport SEO from '../components/SEO/SEO'\nimport Box from '../components/Box/Box'\n\ntype IndexPageProps = PageProps<{\n  latestPost: AllPosts\n  latestProject: AllProjects\n}>\n\nconst title = `Home`\nconst IndexPage = ({ data, uri }: IndexPageProps) => {\n  // this blog list contains only one item, the latest post\n  const blogListContent = data.latestPost.nodes.map(props => <BlogListItem key={props.id} {...props} />)\n  const projectListContent = data.latestProject.nodes.map(props => <ProjectListItem key={props.id} {...props} />)\n  return (\n    <>\n      <SEO pageData={{ slug: uri, title: title }} />\n      <h1>{title}</h1>\n      <Box p='1rem 0'>\n        <h2>Latest Blogpost</h2>\n        <BlogList>{blogListContent}</BlogList>\n        <Link to='/blog'>\n          All Blogposts <ArrowRightCircle size={18} />\n        </Link>\n      </Box>\n      <Box p='1rem 0'>\n        <h2>Latest Project</h2>\n        <ProjectList>{projectListContent}</ProjectList>\n        <Link to='/projects'>\n          All Projects <ArrowRightCircle size={18} />\n        </Link>\n      </Box>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query GetLatestQuery(\n    $filterProjects: MarkdownRemarkFilterInput!\n    $filterBlog: MarkdownRemarkFilterInput!\n    $sort: MarkdownRemarkSortInput!\n    $imgMaxWidth: Int!\n    $imgQuality: Int!\n    $dateFormat: String!\n  ) {\n    ...GetLatestPost\n    ...GetLatestProject\n  }\n`\n","import React from 'react'\nimport Box from '../Box/Box'\n\ninterface ProjectListProps {\n  children?: React.ReactNode\n}\n\nconst ProjectList = ({ children }: ProjectListProps) => {\n  return (\n    <Box pt='1rem' allChildren='margin-bottom: 4rem;'>\n      {children}\n    </Box>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Box from '../Box/Box'\nimport { ArrowRightCircle as ArrowIcon } from 'react-feather'\nimport Thumbnail from '../Thumbnail/Thumbnail'\nimport BlogMeta from '../BlogPost/BlogMeta'\nimport useIsMobile from '../useIsMobile'\nimport { ProjectData } from '../../typings'\n\ninterface ProjectListItemProps extends ProjectData {}\n\nconst ProjectListItem = ({ frontmatter }: ProjectListItemProps) => {\n  const postLink = `/projects${frontmatter.slug}`\n  const { thumbnail, slug, title, description, date, keywords } = frontmatter\n\n  const isMobile = useIsMobile()\n  return (\n    <Box horizontal key={slug}>\n      {!isMobile && <Thumbnail postLink={postLink} thumbnail={thumbnail} />}\n      <Box vertical>\n        <h2>\n          <Link to={postLink}>{title}</Link>\n        </h2>\n        <BlogMeta date={date} keywords={keywords} />\n        {isMobile && <Thumbnail postLink={postLink} thumbnail={thumbnail} />}\n        <p>{description}</p>\n        <Link to={postLink}>\n          View project <ArrowIcon size={18} />\n        </Link>\n      </Box>\n    </Box>\n  )\n}\n\nexport default ProjectListItem\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar ArrowRightCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 16 16 12 12 8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nArrowRightCircle.displayName = 'ArrowRightCircle';\nexport default ArrowRightCircle;","import React from 'react'\nimport Box from '../Box/Box'\n\ninterface BlogListProps {\n  children?: React.ReactNode\n}\n\nconst BlogList = ({ children }: BlogListProps) => {\n  return (\n    <Box pt='1rem' allChildren='margin-bottom: 4rem;'>\n      {children}\n    </Box>\n  )\n}\n\nexport default BlogList\n"],"sourceRoot":""}