{"version":3,"sources":["webpack:///./src/components/ProjectList/ProjectList.tsx","webpack:///./src/pages/projects.tsx","webpack:///./src/components/ProjectList/ProjectListItem.tsx","webpack:///./node_modules/react-feather/dist/icons/arrow-right-circle.js"],"names":["ProjectList","children","pt","allChildren","ProjectsPage","data","uri","projectListContent","allMarkdownRemark","nodes","map","props","key","id","pageData","slug","title","ProjectListItem","frontmatter","postLink","thumbnail","description","date","keywords","isMobile","useIsMobile","horizontal","vertical","to","size","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRightCircle","_ref","ref","_ref$color","color","_ref$size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","x1","y1","x2","y2","displayName"],"mappings":"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","file":"component---src-pages-projects-tsx-9bd6fd73691dc0c2d877.js","sourcesContent":["import React from 'react'\nimport Box from '../Box/Box'\n\ninterface ProjectListProps {\n  children?: React.ReactNode\n}\n\nconst ProjectList = ({ children }: ProjectListProps) => {\n  return (\n    <Box pt='1rem' allChildren='margin-bottom: 4rem;'>\n      {children}\n    </Box>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport { graphql, PageProps } from 'gatsby'\n\nimport { AllProjects } from '../typings'\nimport ProjectListItem from '../components/ProjectList/ProjectListItem'\nimport ProjectList from '../components/ProjectList/ProjectList'\nimport SEO from '../components/SEO/SEO'\n\ntype ProjectsPageProps = PageProps<{\n  allMarkdownRemark: AllProjects\n}>\nconst title = `Projects`\nconst ProjectsPage = ({ data, uri }: ProjectsPageProps) => {\n  const projectListContent = data.allMarkdownRemark.nodes.map(props => <ProjectListItem key={props.id} {...props} />)\n  return (\n    <>\n      <SEO pageData={{ slug: uri, title: title }} />\n      <h1>{title}</h1>\n      <ProjectList>{projectListContent}</ProjectList>\n    </>\n  )\n}\n\nexport default ProjectsPage\n\nexport const pageQuery = graphql`\n  query GetAllProjectsQuery(\n    $filterProjects: MarkdownRemarkFilterInput!\n    $sort: MarkdownRemarkSortInput!\n    $imgMaxWidth: Int!\n    $imgQuality: Int!\n    $dateFormat: String!\n  ) {\n    ...GetAllProjects\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Box from '../Box/Box'\nimport { ArrowRightCircle as ArrowIcon } from 'react-feather'\nimport Thumbnail from '../Thumbnail/Thumbnail'\nimport BlogMeta from '../BlogPost/BlogMeta'\nimport useIsMobile from '../useIsMobile'\nimport { ProjectData } from '../../typings'\n\ninterface ProjectListItemProps extends ProjectData {}\n\nconst ProjectListItem = ({ frontmatter }: ProjectListItemProps) => {\n  const postLink = `/projects${frontmatter.slug}`\n  const { thumbnail, slug, title, description, date, keywords } = frontmatter\n\n  const isMobile = useIsMobile()\n  return (\n    <Box horizontal key={slug}>\n      {!isMobile && <Thumbnail postLink={postLink} thumbnail={thumbnail} />}\n      <Box vertical>\n        <h2>\n          <Link to={postLink}>{title}</Link>\n        </h2>\n        <BlogMeta date={date} keywords={keywords} />\n        {isMobile && <Thumbnail postLink={postLink} thumbnail={thumbnail} />}\n        <p>{description}</p>\n        <Link to={postLink}>\n          View project <ArrowIcon size={18} />\n        </Link>\n      </Box>\n    </Box>\n  )\n}\n\nexport default ProjectListItem\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar ArrowRightCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 16 16 12 12 8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nArrowRightCircle.displayName = 'ArrowRightCircle';\nexport default ArrowRightCircle;"],"sourceRoot":""}